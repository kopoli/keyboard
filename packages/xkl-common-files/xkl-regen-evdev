#!/bin/sh

usage() {
    cat <<EOF
Usage: $0 <update>|<restore>

Updates $REGENFILE from xml fragments in $REGENDIR

Also able to restore an unmodified backup from $BACKUPFILE

Note that this is only a quite hideous hack. If your backup is also corrupted
you should reinstall the package that contains the file $REGENFILE.

In Debian compatible distros this is the 'xkb-data' package.

EOF
    exit 1
}

def() { eval "$1=\${$1-\"$2\"}"; }

def REGENFILE /usr/share/X11/xkb/rules/evdev.xml
def REGENDIR  ${REGENFILE}.d
def BACKUPFILE ${REGENDIR}/$(basename "$REGENFILE").bak
def IDENTSTRING "Generated by xkl-regen-evdev"

regen_evdev_xml() {
    echo "<!-- $IDENTSTRING -->" > "$REGENFILE"
    cat "$BACKUPFILE" >> "$REGENFILE"
    for name in $REGENDIR/*.xml; do
        echo "Adding $name"
        sed -i -e "/<layoutList>/r $name" "$REGENFILE"
    done
}

update() {
    regen_evdev_xml
}

restore() {
    cp "$BACKUPFILE" "$REGENFILE"
}

backup() {
    grep -q "$IDENTSTRING" "$REGENFILE" || \
        install -m 0644 -D "$REGENFILE" "$BACKUPFILE"
}

# main script
CMD=$1

case "$CMD" in
    update|restore)
        backup
        $CMD
        ;;
    *)
        usage
        ;;
esac
